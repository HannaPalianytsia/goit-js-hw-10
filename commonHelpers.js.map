{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datetimePickerRef = document.querySelector(\"#datetime-picker\");\nconst startBtnRef = document.querySelector(\"[data-start]\");\nconst daysRef = document.querySelector(\"[data-days]\");\nconst hoursRef = document.querySelector(\"[data-hours]\");\nconst minutesRef = document.querySelector(\"[data-minutes]\");\nconst secondsRef = document.querySelector(\"[data-seconds]\");\nlet userSelectedDate;\nstartBtnRef.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      if (selectedDates[0] - (new Date()) <= 0) {\n        iziToast.error({\n            message: \"Please choose a date in the future\",\n        });\n          startBtnRef.disabled = true;\n      } else {\n          userSelectedDate = selectedDates[0];\n          startBtnRef.disabled = false;\n      };\n  },\n};\n\n\ndatetimePickerRef.flatpickr(options);\n\nstartBtnRef.addEventListener(\"click\", onStartBtnClick);\n\nfunction onStartBtnClick() {\n    startBtnRef.disabled = true;\n    datetimePickerRef.disabled = true;\n    const intervalId = setInterval(() => {\n        if (userSelectedDate - new Date()>=0) {\n            const dataObj = convertMs(userSelectedDate - new Date());\n            daysRef.textContent = addLeadingZero(dataObj.days);\n            hoursRef.textContent = addLeadingZero(dataObj.hours);\n            minutesRef.textContent = addLeadingZero(dataObj.minutes);\n            secondsRef.textContent = addLeadingZero(dataObj.seconds);\n        } else {\n            clearInterval(intervalId);\n            datetimePickerRef.disabled = false;\n        }\n    }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, \"0\"); \n}\n\n"],"names":["datetimePickerRef","startBtnRef","daysRef","hoursRef","minutesRef","secondsRef","userSelectedDate","options","selectedDates","iziToast","onStartBtnClick","intervalId","dataObj","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"mIAKA,MAAMA,EAAoB,SAAS,cAAc,kBAAkB,EAC7DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAC1D,IAAIC,EACJL,EAAY,SAAW,GAEvB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,GAAM,IAAI,MAAW,GACrCC,EAAS,MAAM,CACX,QAAS,oCACrB,CAAS,EACCR,EAAY,SAAW,KAEvBK,EAAmBE,EAAc,GACjCP,EAAY,SAAW,GAE9B,CACH,EAGAD,EAAkB,UAAUO,CAAO,EAEnCN,EAAY,iBAAiB,QAASS,CAAe,EAErD,SAASA,GAAkB,CACvBT,EAAY,SAAW,GACvBD,EAAkB,SAAW,GAC7B,MAAMW,EAAa,YAAY,IAAM,CACjC,GAAIL,EAAmB,IAAI,MAAQ,EAAG,CAClC,MAAMM,EAAUC,EAAUP,EAAmB,IAAI,IAAM,EACvDJ,EAAQ,YAAcY,EAAeF,EAAQ,IAAI,EACjDT,EAAS,YAAcW,EAAeF,EAAQ,KAAK,EACnDR,EAAW,YAAcU,EAAeF,EAAQ,OAAO,EACvDP,EAAW,YAAcS,EAAeF,EAAQ,OAAO,CACnE,MACY,cAAcD,CAAU,EACxBX,EAAkB,SAAW,EAEpC,EAAE,GAAI,CACX,CAEA,SAASa,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C"}